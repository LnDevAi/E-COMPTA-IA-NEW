# Configuration Docker - Base de données PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/ecomptaia_db
spring.datasource.username=${DB_USERNAME:ecomptaia}
spring.datasource.password=${DB_PASSWORD:ecomptaia123}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration JPA/Hibernate pour PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# Désactiver H2 Console en production
spring.h2.console.enabled=false

# Configuration de sécurité JWT (utilise les variables d'environnement)
jwt.secret=${JWT_SECRET:ecomptaia-docker-secret-key-2024-very-secure-and-long-production}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Configuration des logs pour Docker
logging.level.com.ecomptaia=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.web=WARN

# Configuration CORS pour Docker
spring.web.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:8080}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Configuration Actuator pour monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Configuration du serveur
server.port=8081
server.servlet.context-path=/

# Configuration de la validation
spring.validation.enabled=true

# Configuration du cache
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1800s

# Configuration de la pool de connexions
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000
